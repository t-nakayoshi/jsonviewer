# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.1 on Wed Aug 20 15:48:20 2025
#
# fmt: off
# ruff: noqa: I001
# type: ignore

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
from enum import IntEnum, auto
# IDs
class MenuID(IntEnum):
    FILE_OPEN = 101
    FILE_SAVE = auto()
    FILE_EXIT = auto()
    OPTION_SORT    = auto()
    OPTION_ASCII   = auto()
    OPTION_STAY_ON_TOP = auto()
    OPTION_WINDOW_POS  = auto()
    OPTION_CONFIRM = auto()
    HELP_HELP      = auto()
    HELP_ABOUT     = auto()
    OPTION_INDENT0 = 1000
    OPTION_INDENT2 = 1002
    OPTION_INDENT4 = 1004
    OPTION_INDENT8 = 1006
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(MenuID.FILE_OPEN, "&Open...\tCtrl+O", "Open JSON file.")
        self.Bind(wx.EVT_MENU, self.on_open_file, id=MenuID.FILE_OPEN)
        wxglade_tmp_menu.Append(MenuID.FILE_SAVE, "&Save...\tCtrl+S", "Save formatted JSON file.")
        self.Bind(wx.EVT_MENU, self.on_save_file, id=MenuID.FILE_SAVE)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(MenuID.FILE_EXIT, "E&xit", "Exit application.")
        self.Bind(wx.EVT_MENU, self.on_exit, id=MenuID.FILE_EXIT)
        self.frame_menubar.Append(wxglade_tmp_menu, "&File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(MenuID.OPTION_INDENT0, "No Indent", "No Indent.", wx.ITEM_RADIO)
        self.Bind(wx.EVT_MENU, self.on_set_indent_columns, id=MenuID.OPTION_INDENT0)
        wxglade_tmp_menu_sub.Append(MenuID.OPTION_INDENT2, "2 Columns", "Indent 2 columns.", wx.ITEM_RADIO)
        self.Bind(wx.EVT_MENU, self.on_set_indent_columns, id=MenuID.OPTION_INDENT2)
        wxglade_tmp_menu_sub.Append(MenuID.OPTION_INDENT4, "4 Columns", "Indent 4 columns.", wx.ITEM_RADIO)
        self.Bind(wx.EVT_MENU, self.on_set_indent_columns, id=MenuID.OPTION_INDENT4)
        wxglade_tmp_menu_sub.Append(MenuID.OPTION_INDENT8, "8 Columns", "Indent 8 columns.", wx.ITEM_RADIO)
        self.Bind(wx.EVT_MENU, self.on_set_indent_columns, id=MenuID.OPTION_INDENT8)
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Indent", wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu.Append(MenuID.OPTION_SORT, "&Sort", "Sort by KEY.", wx.ITEM_CHECK)
        self.Bind(wx.EVT_MENU, self.on_set_sort_mode, id=MenuID.OPTION_SORT)
        wxglade_tmp_menu.Append(MenuID.OPTION_ASCII, "&Unicode Escape", "Unicode Escape. (Ensure ASCII)", wx.ITEM_CHECK)
        self.Bind(wx.EVT_MENU, self.on_set_ensure_ascii, id=MenuID.OPTION_ASCII)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(MenuID.OPTION_STAY_ON_TOP, "Sty on Top", "Application window stay on top.", wx.ITEM_CHECK)
        self.Bind(wx.EVT_MENU, self.on_set_stay_on_top, id=MenuID.OPTION_STAY_ON_TOP)
        wxglade_tmp_menu_sub.Append(MenuID.OPTION_WINDOW_POS, "Remenber Current Window pos.", "Remenber Current Window position.", wx.ITEM_CHECK)
        self.Bind(wx.EVT_MENU, self.on_set_window_pos, id=MenuID.OPTION_WINDOW_POS)
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Window", wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(MenuID.OPTION_CONFIRM, "Without confirmation", "Terminate without confirmation.", wx.ITEM_CHECK)
        self.Bind(wx.EVT_MENU, self.on_without_confirm, id=MenuID.OPTION_CONFIRM)
        self.frame_menubar.Append(wxglade_tmp_menu, "&Option")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(MenuID.HELP_HELP, "&Help", "Open manual page.")
        self.Bind(wx.EVT_MENU, self.on_help, id=MenuID.HELP_HELP)
        wxglade_tmp_menu.Append(MenuID.HELP_ABOUT, "&About...", "About JsonViewer.")
        self.Bind(wx.EVT_MENU, self.on_about, id=MenuID.HELP_ABOUT)
        self.frame_menubar.Append(wxglade_tmp_menu, "&Help")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        self.frame_statusbar = self.CreateStatusBar(1, wx.STB_SHOW_TIPS | wx.STB_SIZEGRIP)
        self.frame_statusbar.SetStatusWidths([-1])

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.nb_1 = wx.Notebook(self.panel_1, wx.ID_ANY)
        sizer_1.Add(self.nb_1, 1, wx.EXPAND, 0)

        self.nb_panel1 = wx.Panel(self.nb_1, wx.ID_ANY)
        self.nb_1.AddPage(self.nb_panel1, "Result")

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)

        self.tc_result = wx.TextCtrl(self.nb_panel1, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)
        self.tc_result.SetToolTip("Drop JSON file.")
        sizer_2.Add(self.tc_result, 1, wx.EXPAND, 0)

        self.nb_panel1.SetSizer(sizer_2)

        self.panel_1.SetSizer(sizer_1)

        sizer_1.Fit(self)
        self.Layout()

        self.Bind(wx.EVT_CLOSE, self.on_exit)
        # end wxGlade

    def on_open_file(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_open_file' not implemented!")
        event.Skip()

    def on_save_file(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_save_file' not implemented!")
        event.Skip()

    def on_exit(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_exit' not implemented!")
        event.Skip()

    def on_set_indent_columns(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_set_indent_columns' not implemented!")
        event.Skip()

    def on_set_sort_mode(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_set_sort_mode' not implemented!")
        event.Skip()

    def on_set_ensure_ascii(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_set_ensure_ascii' not implemented!")
        event.Skip()

    def on_set_stay_on_top(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_set_stay_on_top' not implemented!")
        event.Skip()

    def on_set_window_pos(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_set_window_pos' not implemented!")
        event.Skip()

    def on_without_confirm(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_without_confirm' not implemented!")
        event.Skip()

    def on_help(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_help' not implemented!")
        event.Skip()

    def on_about(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'on_about' not implemented!")
        event.Skip()

# end of class MainFrame
